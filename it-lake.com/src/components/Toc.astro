---
import type { MarkdownHeading } from 'astro'
import TocItem from './TocItem.astro'

interface Props {
  headings: MarkdownHeading[]
}

function buildHierarchy(headings: MarkdownHeading[]) {
  const toc: {
    depth: number
    subheadings: MarkdownHeading[]
    slug: string
    text: string
  }[] = []
  const parentHeadings = new Map<number, any>()

  headings.forEach((h: MarkdownHeading) => {
    const heading = { ...h, subheadings: [] }

    parentHeadings.set(heading.depth, heading)

    if (heading.depth === 2) {
      toc.push(heading)
    } else if (heading.depth === 3) {
      const parent = parentHeadings.get(heading.depth - 1)
      if (parent) {
        parent.subheadings.push(heading)
      }
    }
  })

  return toc
}

const headings = buildHierarchy(Astro.props.headings ?? [])
---
<nav class="toc" aria-label="Table of Contents">
  <ol>
    {headings.map((heading) => (
      <TocItem key={heading.slug} heading={heading} />
    ))}
  </ol>
</nav>

<style>
.toc {
  margin-top: 50px;
  border: 2px solid #efefef;
  padding: 16px;
  background-color: #fafafa;
  counter-reset: section; /* カウンターの初期化をここに移動 */
}

html.dark .toc{
  margin-top: 50px;
  border: 2px solid #969494;
  padding: 16px;
  background-color: #30323d;
  counter-reset: section; /* カウンターの初期化をここに移動 */
}

.toc ol {
  list-style: none;
  padding-left: 32px;
}
{}
.toc a {
  text-decoration: none;
}

.toc a:hover {
  text-decoration: underline;
}
</style>