---
interface Props {
  post: CollectionEntry<'posts'>;
}

import type { CollectionEntry } from 'astro:content';
import { extractDateAndSlug } from '../scripts/extractDateAndSlug';
import { isRemoteImage } from '../scripts/isRemoteImage';
import PostTag from './PostTag.astro';
import PostTimestamp from './PostTimestamp.astro';
import { Image } from 'astro:assets'
const { post } = Astro.props as Props;
const {title, description, thumbnail, tags,updateDate} = post.data;
const { pubDate, slug } = extractDateAndSlug(post.id);
---

<article style="display: flex; gap: 1rem; padding: 1rem 0; border-bottom: 1px solid #ddd;">
    {thumbnail && (
        <a href={`/posts/${slug}`}>
            {isRemoteImage(thumbnail as string) ?
            <img src={thumbnail as string} alt={title} style="max-width: 210px; max-height: 160px; object-fit: cover;" /> :
            <Image src={thumbnail as ImageMetadata} alt={title} class="postcard-cover"/>}
        </a>
    )}

    <div style="flex: 1;">
        <h3 style="margin: 0 0 0.5rem 0; font-size: 1.25rem;">
            <a href={`/posts/${slug}`} style="text-decoration: none; color: inherit;">
                {title}
            </a>
        </h3>

        <p style="color: #555; margin: 0 0 0.5rem 0; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">{description}</p>

        <div style="display: flex; align-items: center; font-size: 0.875rem; color: #888; gap: 0.6rem;">
            <PostTimestamp pubDate={pubDate} updateDate={updateDate}/>
            <PostTag tags={tags}/>
            <a href={`/posts/${slug}`} style="text-decoration: none; color: #0070f3; margin-left: auto; font-weight: bold;">Read more â†’</a>
        </div>
    </div>
</article>

<style>
img.postcard-cover{
  max-width: 210px;
  max-height: 160px;
  object-fit:contain;
}
</style>