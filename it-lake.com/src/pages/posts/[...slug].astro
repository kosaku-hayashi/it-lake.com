---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import TOC from '../../components/Toc.astro'
import Image from '../../components/CustomImage.astro'
import PostTag from './../../components/PostTag.astro';
import PostTimestamp from './../../components/PostTimestamp.astro';
import { extractDateAndSlug } from '../../scripts/extractDateAndSlug'

interface Props {
  post: CollectionEntry<'posts'>;
}

export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  return allPosts.map((post:any) =>{
    return ({
      params:{ slug: extractDateAndSlug(post.id).slug},
      props: { post},
    })
  })
}

const { post } = Astro.props as Props;
const { Content } = await post.render();
---

<BaseLayout pageTitle={post.data.title}>
  {post.data.noIndex && <meta slot="head" name="robots" content="noindex"/>}
  <div style="display:flex; margin-top: -15px; margin-bottom: 30px; font-size: 0.875rem; color: #888; gap: 0.6rem;">
      <PostTimestamp pubDate={extractDateAndSlug(post.id).pubDate} updateDate={post.data.updateDate}/>
      <PostTag tags={post.data.tags}/>
  </div>
  <div class="article">
    <Content components={{ TOC, Image,}}/>
  </div>
</BaseLayout>

<style is:global>
.main-content h2,
.main-content h3 {
    margin-top: 60px;
}

/* マークダウンで表示する画像 */
.article *:has(img[loading="lazy"][decoding="async"]) {
  text-align: center;
}
.article img[loading="lazy"][decoding="async"] {
  max-width: 610px;
  max-height: 340px;
  object-fit: contain;
}


.article:not(nav.toc) > ul,
.article:not(nav.toc) > ol {
  background: #f1f8ff;
  box-shadow: 0px 0px 0px 10px #f1f8ff;
  border-radius: 9px;
  margin-left: 10px;
  margin-right: 10px;
  padding: 0.5em 0.5em 0.5em 2em;
}

html.dark .article:not(nav.toc) > ul,
html.dark .article:not(nav.toc) > ol {
  background: #232842;
  box-shadow: 0px 0px 0px 10px #232842;
  border-radius: 9px;
  margin-left: 10px;
  margin-right: 10px;
  padding: 0.5em 0.5em 0.5em 2em;
}

.article:not(nav.toc) > ul li,
.article:not(nav.toc) > ol li {
  line-height: 1.5;
  padding: 0.5em 0;
}

html.dark .article p{
  color: #dddbd6;
}

</style>